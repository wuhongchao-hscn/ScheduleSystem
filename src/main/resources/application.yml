spring:
  session:
    store-type: redis #设置 Spring Session 使用 Redis 进行存储。默认配置就是 redis
    timeout: 3s # 设置 Spring Session 的过期时间。如果不指定单位模式是 s
    redis:
      flush-mode: immediate # on_save:保存时刷新，即响应结束后刷新。默认是 on_save   immediate:实时刷新
      namespace: redis:session #存储 Session的命名空间，默认是spring:session。

  server:
    tomcat:
      uri-encoding: UTF-8



  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    # 20200615 改用dockerRedis 数据源地址变更 127.0.0.1⇒10.97.24.222
    #    host: 127.0.0.1
    host: 10.97.24.222
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: redis_password
    # 链接超时时间 单位 ms（毫秒）
    timeout: 5000
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制） 默认 8
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-wait: -1
        # 连接池中的最大空闲连接 默认 8
        max-idle: 8
        # 连接池中的最小空闲连接 默认 0
        min-idle: 0

  # 默认的数据源设置，mybatis+postgrel连接
  #  datasource:
  #    url: jdbc:postgresql://127.0.0.1:5432/postgres?useSSL=false?useAffectedRows=true
  #    username: postgres
  #    password: sysdba
  #    driverClassName: org.postgresql.Driver
  datasource:
    # 20200615 改用dockerPostgres 数据源地址变更 127.0.0.1⇒10.97.24.222
    #    jdbc-url: jdbc:postgresql://127.0.0.1:5432/postgres?useSSL=false?useAffectedRows=true
    jdbc-url: jdbc:postgresql://10.97.24.222:5432/postgres?useSSL=false?useAffectedRows=true
    username: postgres
    password: sysdba
  #    driverClassName: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false

  thymeleaf:
    cache: false

  servlet:
    multipart:
      max-request-size: -1
      max-file-size: -1

  devtools:
    restart:
      log-condition-evaluation-delta: false

  mvc:
    hiddenmethod:
      filter:
        enabled: true

  # MongoDB配置
  data:
    mongodb:
      # 使用全局最高权限连接
      # 20200615 改用dockerMongoDB 数据源地址变更 localhost⇒10.97.24.222
      #      uri: mongodb://MongoDB:mongodb@localhost:27017
      uri: mongodb://MongoDB:mongodb@10.97.24.222:27017
      # 使用数据库权限连接
      #uri: mongodb://root:123456@localhost:27017/fileManager
      # 数据库名
      database: fileManager

  cache:
    cacheNames[0]: GSAX
    cacheNames[1]: GSAA
    cacheNames[2]: GSAB
    cacheNames[3]: GSAC

logging:
  level:
    root: error
    com:
      hitachi: info
  file:
    name: log/spring-boot.log
    #pattern:
    #console: "%d{yyyy-MM-dd HH:mm:ss.sss} {%thread} %-5level %logger{50} - %msg%n"
    #file: "%d{yyyy-MM-dd HH:mm:ss.sss} {%thread} %-5level %logger{50} - %msg%n"
mybatis:
  type-aliases-package: com.hitachi.schedule.dao.mybatis
  mapper-locations: classpath:mapper/*Mapper.xml

web:
  default-image:
    path: /static/images/default.jpg

# 20200511改用双数据源 mybatis+postgrel spring-data-jpa+mysql 配置在最后
jpa:
  datasource:
    # 20200615 改用dockerMysql 数据源地址变更 localhost⇒10.97.24.222
    #    jdbc-url: jdbc:mysql://localhost:3306/blog?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    jdbc-url: jdbc:mysql://10.97.24.222:3306/blog?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: root
#    driverClassName: com.mysql.cj.jdbc.Driver

banner: classpath:banner.txt